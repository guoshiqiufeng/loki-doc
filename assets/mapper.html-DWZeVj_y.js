import{_ as n,o as s,c as a,d as t}from"./app-C7opU1tZ.js";const e={},p=t(`<h1 id="使用basemapper" tabindex="-1"><a class="header-anchor" href="#使用basemapper"><span>使用BaseMapper</span></a></h1><blockquote><p>自定义Mapper接口继承<code>BaseMapper</code></p></blockquote><h2 id="使用默认方法" tabindex="-1"><a class="header-anchor" href="#使用默认方法"><span>使用默认方法</span></a></h2><h3 id="直接发送消息" tabindex="-1"><a class="header-anchor" href="#直接发送消息"><span>直接发送消息</span></a></h3><p>方法定义</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">T</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用方式</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">TestEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;9521&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">String</span> messageId <span class="token operator">=</span> testMapper<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="异步发送消息" tabindex="-1"><a class="header-anchor" href="#异步发送消息"><span>异步发送消息</span></a></h3><p>方法定义</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">sendAsync</span><span class="token punctuation">(</span><span class="token class-name">T</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用方式</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">TestEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;9521&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringCompletableFuture <span class="token operator">=</span> testMapper<span class="token punctuation">.</span><span class="token function">sendAsync</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> messageId <span class="token operator">=</span> stringCompletableFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用自定义注解" tabindex="-1"><a class="header-anchor" href="#使用自定义注解"><span>使用自定义注解</span></a></h2><h3 id="直接发送消息-1" tabindex="-1"><a class="header-anchor" href="#直接发送消息-1"><span>直接发送消息</span></a></h3><p>Mapper添加方法</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@SendMessage</span><span class="token punctuation">(</span>topic <span class="token operator">=</span> <span class="token string">&quot;loki&quot;</span><span class="token punctuation">,</span> tag <span class="token operator">=</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;#entity.message&quot;</span><span class="token punctuation">,</span> messageKey <span class="token operator">=</span> <span class="token string">&quot;#entity.id&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">customSend</span><span class="token punctuation">(</span><span class="token class-name">TestEntity</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SendMessage</span><span class="token punctuation">(</span>topic <span class="token operator">=</span> <span class="token string">&quot;loki&quot;</span><span class="token punctuation">,</span> tag <span class="token operator">=</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;#entity.message&quot;</span><span class="token punctuation">,</span> messageKey <span class="token operator">=</span> <span class="token string">&quot;#entity.id&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">String</span> <span class="token function">customSend2</span><span class="token punctuation">(</span><span class="token class-name">TestEntity</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方式</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">TestEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;9521&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
testMapper<span class="token punctuation">.</span><span class="token function">customSend</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="异步发送消息-1" tabindex="-1"><a class="header-anchor" href="#异步发送消息-1"><span>异步发送消息</span></a></h3><p>Mapper添加方法</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@SendMessage</span><span class="token punctuation">(</span>topic <span class="token operator">=</span> <span class="token string">&quot;loki&quot;</span><span class="token punctuation">,</span> tag <span class="token operator">=</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span> async <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;#entity.message&quot;</span><span class="token punctuation">,</span> messageKey <span class="token operator">=</span> <span class="token string">&quot;#entity.id&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">customAsyncSend</span><span class="token punctuation">(</span><span class="token class-name">TestEntity</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方式</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">TestEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;9521&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringCompletableFuture <span class="token operator">=</span> testMapper<span class="token punctuation">.</span><span class="token function">customAsyncSend</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> messageId <span class="token operator">=</span> stringCompletableFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","mapper.html.vue"]]),d=JSON.parse('{"path":"/guide/send/mapper.html","title":"使用BaseMapper","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"使用BaseMapper","description":null},"headers":[{"level":2,"title":"使用默认方法","slug":"使用默认方法","link":"#使用默认方法","children":[{"level":3,"title":"直接发送消息","slug":"直接发送消息","link":"#直接发送消息","children":[]},{"level":3,"title":"异步发送消息","slug":"异步发送消息","link":"#异步发送消息","children":[]}]},{"level":2,"title":"使用自定义注解","slug":"使用自定义注解","link":"#使用自定义注解","children":[{"level":3,"title":"直接发送消息","slug":"直接发送消息-1","link":"#直接发送消息-1","children":[]},{"level":3,"title":"异步发送消息","slug":"异步发送消息-1","link":"#异步发送消息-1","children":[]}]}],"git":{"updatedTime":1707096601000,"contributors":[{"name":"yanghq","email":"1040926235@qq.com","commits":1},{"name":"過世秋風","email":"1040926235@qq.com","commits":1}]},"filePathRelative":"guide/send/mapper.md"}');export{r as comp,d as data};
