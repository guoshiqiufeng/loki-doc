import{_ as d,i as r,r as p,o as k,c as v,a as n,e as s,b as a,w as t,d as m,t as c,u as i}from"./app-C7opU1tZ.js";const g=n("h1",{id:"快速开始",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#快速开始"},[n("span",null,"快速开始")])],-1),b={href:"https://github.com/guoshiqiufeng/loki",target:"_blank",rel:"noopener noreferrer"},h=n("h2",{id:"初始化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#初始化"},[n("span",null,"初始化")])],-1),_=n("p",null,"创建一个空的Spring Boot 工程（2.x、3.x 都支持）这里我们使用 3.2.0 版本。",-1),y=n("h2",{id:"添加依赖",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#添加依赖"},[n("span",null,"添加依赖")])],-1),f={class:"language-xml","data-ext":"xml","data-title":"xml"},q={class:"language-xml"},w=n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")],-1),x=n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")],-1),j=n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")],-1),T=n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")],-1),M=n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")],-1),S=n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("version")]),n("span",{class:"token punctuation"},">")],-1),I=n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("version")]),n("span",{class:"token punctuation"},">")],-1),E=n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")],-1),C={class:"language-groovy","data-ext":"groovy","data-title":"groovy"},L={class:"language-groovy"},A={class:"token string"},G={class:"language-groovy","data-ext":"groovy","data-title":"groovy"},B={class:"language-groovy"},N=n("span",{class:"token punctuation"},":",-1),V=n("span",{class:"token string"},"'com.github.guoshiqiufeng'",-1),D=n("span",{class:"token punctuation"},",",-1),O=n("span",{class:"token punctuation"},":",-1),R=n("span",{class:"token string"},"'loki-spring-boot-starter'",-1),z=n("span",{class:"token punctuation"},",",-1),K=n("span",{class:"token punctuation"},":",-1),J={class:"token string"},P=m(`<h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><p>在 application.yml 中添加配置：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">loki</span><span class="token punctuation">:</span>
  <span class="token key atrule">global-config</span><span class="token punctuation">:</span>
    <span class="token key atrule">mq-config</span><span class="token punctuation">:</span>
      <span class="token key atrule">mq-type</span><span class="token punctuation">:</span> rocket_mq
      <span class="token key atrule">address</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8081</span>
      <span class="token key atrule">auth</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
      <span class="token key atrule">username</span><span class="token punctuation">:</span> un
      <span class="token key atrule">password</span><span class="token punctuation">:</span> ps
      <span class="token key atrule">connect-timeout</span><span class="token punctuation">:</span> <span class="token number">300</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在启动类上添加注解 <code>@LokiMapperScan</code>，并在需要的方法上添加注解 <code>@Loki</code>，如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@LokiMapperScan</span>
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LokiTestApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">LokiTestApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编码" tabindex="-1"><a class="header-anchor" href="#编码"><span>编码</span></a></h2><p>编写实体类 TestEntity.java</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@MessageName</span><span class="token punctuation">(</span>topic <span class="token operator">=</span> <span class="token string">&quot;loki&quot;</span><span class="token punctuation">,</span> tag <span class="token operator">=</span> <span class="token string">&quot;create&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestEntity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@MessageKey</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> message<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写Mapper类 <code>TestMapper.java</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TestMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TestEntity</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写监听类 <code>TestListener.java</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestListener</span> <span class="token keyword">implements</span> <span class="token class-name">Listener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TestEntity</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">MessageContent</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TestEntity</span><span class="token punctuation">&gt;</span></span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;entity:{}&quot;</span><span class="token punctuation">,</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开始使用" tabindex="-1"><a class="header-anchor" href="#开始使用"><span>开始使用</span></a></h2><p>添加测试Controller类，进行功能测试：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">TestMapper</span> testMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;send&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TestEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        entity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;9521&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        entity<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> messageId <span class="token operator">=</span> testMapper<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;send messageId:{}&quot;</span><span class="token punctuation">,</span> messageId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;sendAsync&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">sendAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TestEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        entity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;9521&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        entity<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&quot;sendAsync&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        testMapper<span class="token punctuation">.</span><span class="token function">sendAsync</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),F={href:"https://github.com/guoshiqiufeng/loki-test",target:"_blank",rel:"noopener noreferrer"},H=n("h2",{id:"小结",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#小结"},[n("span",null,"小结")])],-1),Q=n("p",null,"通过以上几个简单的步骤，我们就实现了 TestEntity 的发送和消费。",-1),U={__name:"getting-started.html",setup(W){const e=r("version");return(X,Y)=>{const l=p("ExternalLinkIcon"),o=p("CodeGroupItem"),u=p("CodeGroup");return k(),v("div",null,[g,n("p",null,[s("我们通过一个简单的Demo来介绍如何使用 "),n("a",b,[s("LOKI"),a(l)]),s(" 的功能。")]),h,_,y,a(u,null,{default:t(()=>[a(o,{title:"Maven",active:""},{default:t(()=>[n("div",f,[n("pre",q,[n("code",null,[w,s(`
    `),x,s("com.github.guoshiqiufeng"),j,s(`
    `),T,s("loki-spring-boot-starter"),M,s(`
    `),S,s(c(i(e)),1),I,s(`
`),E,s(`
`)])])])]),_:1}),a(o,{title:"Gradle (Short)",active:""},{default:t(()=>[n("div",C,[n("pre",L,[n("code",null,[s("implementation "),n("span",A,"'com.github.guoshiqiufeng:loki-spring-boot-starter:"+c(i(e))+"'",1),s(`
`)])])])]),_:1}),a(o,{title:"Gradle"},{default:t(()=>[n("div",G,[n("pre",B,[n("code",null,[s("implementation group"),N,s(),V,D,s(" name"),O,s(),R,z,s(" version"),K,s(),n("span",J,"'"+c(i(e))+"'",1),s(`
`)])])])]),_:1})]),_:1}),P,n("p",null,[s("完整的代码示例 查看 "),n("a",F,[s("loki-test"),a(l)])]),H,Q])}}},$=d(U,[["__file","getting-started.html.vue"]]),nn=JSON.parse('{"path":"/guide/getting-started.html","title":"快速开始","lang":"zh-cn","frontmatter":{"lang":"zh-cn","title":"快速开始","description":null},"headers":[{"level":2,"title":"初始化","slug":"初始化","link":"#初始化","children":[]},{"level":2,"title":"添加依赖","slug":"添加依赖","link":"#添加依赖","children":[]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":2,"title":"编码","slug":"编码","link":"#编码","children":[]},{"level":2,"title":"开始使用","slug":"开始使用","link":"#开始使用","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"updatedTime":1707096601000,"contributors":[{"name":"yanghq","email":"1040926235@qq.com","commits":7},{"name":"guoshiqiufeng","email":"1040926235@qq.com","commits":1},{"name":"過世秋風","email":"1040926235@qq.com","commits":1}]},"filePathRelative":"guide/getting-started.md"}');export{$ as comp,nn as data};
