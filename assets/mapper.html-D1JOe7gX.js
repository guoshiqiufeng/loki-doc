import{_ as s,o as n,c as a,d as t}from"./app-C7opU1tZ.js";const e={},p=t(`<h1 id="using-the-basemapper" tabindex="-1"><a class="header-anchor" href="#using-the-basemapper"><span>Using the BaseMapper</span></a></h1><blockquote><p>The custom Mapper interface extends <code>BaseMapper</code></p></blockquote><h2 id="default-method-usage" tabindex="-1"><a class="header-anchor" href="#default-method-usage"><span>Default method usage</span></a></h2><h3 id="direct-messages" tabindex="-1"><a class="header-anchor" href="#direct-messages"><span>Direct Messages</span></a></h3><p>Method Definition</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">T</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>How to Use</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">TestEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;9521&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> messageId <span class="token operator">=</span> testMapper<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="publish-messages-asynchronously" tabindex="-1"><a class="header-anchor" href="#publish-messages-asynchronously"><span>Publish Messages Asynchronously</span></a></h3><p>Method Definition</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">sendAsync</span><span class="token punctuation">(</span><span class="token class-name">T</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>How to Use</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">TestEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;9521&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringCompletableFuture <span class="token operator">=</span> testMapper<span class="token punctuation">.</span><span class="token function">sendAsync</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> messageId <span class="token operator">=</span> stringCompletableFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="using-custom-annotations" tabindex="-1"><a class="header-anchor" href="#using-custom-annotations"><span>Using Custom Annotations</span></a></h2><h3 id="direct-messages-1" tabindex="-1"><a class="header-anchor" href="#direct-messages-1"><span>Direct Messages</span></a></h3><p>Mapper add method</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SendMessage</span><span class="token punctuation">(</span>topic <span class="token operator">=</span> <span class="token string">&quot;loki&quot;</span><span class="token punctuation">,</span> tag <span class="token operator">=</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;#entity.message&quot;</span><span class="token punctuation">,</span> messageKey <span class="token operator">=</span> <span class="token string">&quot;#entity.id&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">customSend</span><span class="token punctuation">(</span><span class="token class-name">TestEntity</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SendMessage</span><span class="token punctuation">(</span>topic <span class="token operator">=</span> <span class="token string">&quot;loki&quot;</span><span class="token punctuation">,</span> tag <span class="token operator">=</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;#entity.message&quot;</span><span class="token punctuation">,</span> messageKey <span class="token operator">=</span> <span class="token string">&quot;#entity.id&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">String</span> <span class="token function">customSend2</span><span class="token punctuation">(</span><span class="token class-name">TestEntity</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>How to Use</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">TestEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;9521&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
testMapper<span class="token punctuation">.</span><span class="token function">customSend</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="publish-messages-asynchronously-1" tabindex="-1"><a class="header-anchor" href="#publish-messages-asynchronously-1"><span>Publish Messages Asynchronously</span></a></h3><p>Mapper add method</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SendMessage</span><span class="token punctuation">(</span>topic <span class="token operator">=</span> <span class="token string">&quot;loki&quot;</span><span class="token punctuation">,</span> tag <span class="token operator">=</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span> async <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;#entity.message&quot;</span><span class="token punctuation">,</span> messageKey <span class="token operator">=</span> <span class="token string">&quot;#entity.id&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">customAsyncSend</span><span class="token punctuation">(</span><span class="token class-name">TestEntity</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>How to Use</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">TestEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;9521&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
entity<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringCompletableFuture <span class="token operator">=</span> testMapper<span class="token punctuation">.</span><span class="token function">customAsyncSend</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> messageId <span class="token operator">=</span> stringCompletableFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),o=[p];function c(i,l){return n(),a("div",null,o)}const r=s(e,[["render",c],["__file","mapper.html.vue"]]),d=JSON.parse('{"path":"/en/guide/send/mapper.html","title":"Using the BaseMapper","lang":"en","frontmatter":{"lang":"en","title":"Using the BaseMapper","description":null},"headers":[{"level":2,"title":"Default method usage","slug":"default-method-usage","link":"#default-method-usage","children":[{"level":3,"title":"Direct Messages","slug":"direct-messages","link":"#direct-messages","children":[]},{"level":3,"title":"Publish Messages Asynchronously","slug":"publish-messages-asynchronously","link":"#publish-messages-asynchronously","children":[]}]},{"level":2,"title":"Using Custom Annotations","slug":"using-custom-annotations","link":"#using-custom-annotations","children":[{"level":3,"title":"Direct Messages","slug":"direct-messages-1","link":"#direct-messages-1","children":[]},{"level":3,"title":"Publish Messages Asynchronously","slug":"publish-messages-asynchronously-1","link":"#publish-messages-asynchronously-1","children":[]}]}],"git":{"updatedTime":1707096601000,"contributors":[{"name":"yanghq","email":"1040926235@qq.com","commits":1},{"name":"過世秋風","email":"1040926235@qq.com","commits":1}]},"filePathRelative":"en/guide/send/mapper.md"}');export{r as comp,d as data};
